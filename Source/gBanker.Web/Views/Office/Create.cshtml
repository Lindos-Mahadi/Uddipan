@model gBanker.Web.ViewModels.OfficeViewModel

@{
    ViewBag.Title = "Office Create";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";    
    var unions = Model == null ? null : Model.UnionList;
}
<script type="text/javascript">

    $(document).ready(function () {
        
        $("#OperationStartDate").datepicker(
            {
                dateFormat: "dd-M-yy",                
                showAnim: "scale",                
            });
        $("#OperationStartDate").val('');
        $("#txtParentCode").blur(function () {
            var ParentId = $("#ParentId").val();
            $.ajax({
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("GetParentCodeDetail", "Office", "http")',
                type: "GET",
                dataType: 'json',
                async: true,
                data: { ParentId: ParentId },
                success: function (result) {
                    //alert(result.FirstLevel);
                    $("#FirstLevel").val(result.FirstLevel);
                    $("#SecondLevel").val(result.SecondLevel);
                    $("#ThirdLevel").val(result.ThirdLevel);
                },
                error: function (request, status, error) {
                    alert(request.statusText + "/" + request.status + "/" + error);
                }
            });
        });
        $("#txtParentCode").autocomplete({
            source: function (request, response) {
                $.ajax({
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("GetParentList", "Office", "http")',
                    type: "GET",
                    dataType: 'json',
                    async: true,
                    data: { OfficeCode: request.term },
                    minLength: 1,
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                value: item.OfficeID,
                                label: item.OfficeFullName
                            };
                            //response(data);
                        }))
                    }
                })
            },
            messages: {
                noResults: "", results: ""
            },
            focus: function (event, ui) {
                $("#txtParentCode").val(ui.item.label);
                return false;
            },
            select: function (event, ui) {
                $("#txtParentCode").val(ui.item.label);
                $("#ParentId").val(ui.item.value);
                return false;
            },
            change: function (event, ui) {
                $("#txtParentCode").val(ui.item.label);
                $("#ParentId").val(ui.item.value);
                return false;
            }
        });

    });

</script>

@Html.ActionLink("Back to List", "Index", null, new { @class = "pull-right" })
<h2 class="page-title">Office Create</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ParentId, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBox("txtParentCode", "", new { @class = "form-control", @placeholder = "Type a parent code or name to get auto suggest" })
                    @Html.HiddenFor(model => model.ParentId)
                    @Html.HiddenFor(model => model.FirstLevel)
                    @Html.HiddenFor(model => model.SecondLevel)
                    @Html.HiddenFor(model => model.ThirdLevel)
                    @Html.HiddenFor(model => model.FourthLevel)
                    @Html.HiddenFor(model => model.ProjectOffice)
                    @*@Html.EditorFor(model => model.ParentCode, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.ParentId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.OfficeCode, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.OfficeCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OfficeCode, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.OfficeName, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.OfficeName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OfficeName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
         <div class="col-md-6">
                <div class="form-group">
                     @Html.LabelFor(model => model.IsProjectOffice, htmlAttributes: new { @class = "control-label" })
                     <div>
                        @Html.RadioButtonFor(model => model.IsProjectOffice, true, new { @class = "form-check-input" })
                        <label class=""  style="padding-left:0px;">Yes</label>
                        @Html.RadioButtonFor(model => model.IsProjectOffice, false, new { @class = "form-check-input" , @checked = "checked" })
                        <label class=""  style="padding-left:0px;">No</label>
                     </div>
                </div>
           </div>
        </div>
        
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.OperationStartDate, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.OperationStartDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OperationStartDate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.OfficeAddress, htmlAttributes: new { @class = "control-label" })
                    @Html.TextAreaFor(model => model.OfficeAddress, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.OfficeAddress, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.PostCode, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.PostCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PostCode, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>        
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.UnionID, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.UnionID, unions, new { @class = "form-control chosen" })
                    @Html.ValidationMessageFor(model => model.UnionID, "", new { @class = "text-danger" })                   
                </div>
            </div>
        </div>        
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.InvestorID, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.InvestorID, Model.InvestorList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.InvestorID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <div class="form-group form-action">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    <link href="~/Assets/plugins/choosen/chosen.css" rel="stylesheet" />
    <script src="~/Assets/plugins/choosen/chosen.jquery.js"></script>

    <script type="text/javascript">
        $(function () {
            if ($(".chosen").length > 0) {
                $(".chosen").val('').trigger("liszt:updated");
                jQuery(".chosen").chosen();
            }
        })
    </script>
}
